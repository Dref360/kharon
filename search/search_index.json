{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Kharon","text":"<p>This project solves the problem of sharing applications with other people around the world. This way, you can safely create dashboards with private data and share it with specific people without setting up the AuthN/Z yourself.</p> <p>Kharon is a FastAPI-based reverse proxy server with Google Authentication. It allows you to secure your applications by requiring users to authenticate via their Google accounts before accessing web servers using an SSH tunnel.</p> <p> </p>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Login at https://kharon.app</li> <li>Create an API Key in the <code>Settings</code> tab.<ol> <li>Keep it close! Kharon doesn't remember the key</li> </ol> </li> <li> <p>Log into your VM</p> <p>Note</p> <p>Your VM must have the following requirements:</p> <ol> <li>An External IP (static or not)</li> <li>Port 2222 must be open</li> <li>Your HTTP app must be on port 8080</li> <li>Docker must be installed</li> </ol> <p>Run the following command to start the Kharon Daemon. <pre><code>export KHARON_API_KEY= ... # Your api key\ncurl -O https://raw.githubusercontent.com/Dref360/kharon/main/service/docker-compose.yml &amp;&amp; docker-compose up -d\n</code></pre></p> </li> <li> <p>Your Cluster will now show on the Dashboard</p> <ol> <li>You can now allow users to access your cluster and access it yourself.</li> </ol> </li> </ol>"},{"location":"#features","title":"Features","text":"<ul> <li>\u2705 Google Authentication: Users must log in with their Google accounts to access protected resources.</li> <li>\u2705 Authorization: Authorize people to access jobs (using Casbin would be a great future implementation for fine-grained AuthZ).</li> <li>\u2705 FastAPI: Utilizes the FastAPI framework for efficient and fast development.</li> <li>\u2705 API Key Management: Users can create/delete keys.</li> <li>\u2705 KharonDaemon (KHD): Small daemon that we can tunnel into with SSH.<ul> <li>\u2705 SSH Server</li> <li>\u2705 Automatic registration to host</li> <li>\u2705 Reverse Proxy: Directs incoming requests to the appropriate backend services.</li> </ul> </li> </ul> <p>Warning</p> <p>I know the app isn't super fast. It's due to a bunch of factor that I will improve over time. For example, we create a new tunnel for every request and the backend runs on a small Cloud Run.</p> <p>If there is some demand for this product, I will improve it :)</p>"}]}